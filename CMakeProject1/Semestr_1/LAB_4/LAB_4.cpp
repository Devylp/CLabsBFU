//Лаба 4
#include <iostream>
#include <cmath>
using namespace std;

int A, B, C;
int x;
int N;

int main() {
    
    cin >> A >> B >> C;
    
    // 1-е задание
    
    if ((A > B) && (B > C))
        cout << (A - B - C) << endl;
    
    else if ((B > A) && (B % C == 0))
        cout << ((B/C) + B - A) << endl;
    
    else
        cout << (A + B + C) << endl;
    
    
    // 2-е задание
    do {
        cin >> N;
    
        switch (N) {
        
            case 0:
                cout << "Ноль" << endl;
                break;
            case 1:
                cout << "Один" << endl;
                break;
            case 2:
                cout << "Два" << endl;
                break;
            case 3:
                cout << "Три" << endl;
                break;
            case 4:
                cout << "Четыре" << endl;
                break;
            case 5:
                cout << "Пять" << endl;
                break;
            case 6:
                cout << "Шесть" << endl;
                break;
            case 7:
                cout << "Семь" << endl;
                break;
            case 8:
                cout << "Восемь" << endl;
                break;
            case 9:
                cout << "Девять" << endl;
                break;
            default:
                cout << "Введено неизвестное N. Попробуйте ещё" << endl;
                break;
            }
    } while (N < 0 || N > 9); 
    
    /*
    Пояснение
    Здесь мы используем цикл do while в качестве проверки.
    Сначала мы вводим, потом проверяем в switch и, если не сходится, то спускаемся в while.
    */
    
    // 3-е задание
    
    //cout << "Введите число (не 0): "; Или можно заранее прописать предупреждение.
    cin >> x;

    int AbsX = (abs(x) == 1)? x : (x/abs(x)); //Проверка на модуль. В случае противного приводим к 1
    
    string Result = (x > 0)? ("Positive number") : ("Negative number"); //Проверка на знак
    
    cout << Result; //Вывод результата в поток вывода данных
    
    /*
    Доп.проверка на длину сделана для того, если пользователь введёт число, не равное по модулю
    1, то программа за него сделает приведение к единичному значению. Также можно дополнительно
    прописать блок для обработки случаев, когда пользователь ввёл 0.
    */
    
}

/*
Вариант 3.
1. Ввести натуральные числа A, B и C. Если A больше B и B больше C, то вывести A-B-C, если B больше A и B  кратно C, то вывести B/С+B-A, в остальных случаях вывести A+B+C.
2. Ввести цифру N, при помощи оператора switch вывести название цифры. Предусмотреть обработку ошибочного ввода N.
3. Переменная x может принимать 2 значения: -1 и 1. Если -1, то вывести в консоль “Negative number”, если положительное - “Positive number”. Предложить вариант программы и объяснить свой выбор.


*/